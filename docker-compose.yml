version: '3.8'

# Services pour le déploiement complet de la solution FHIRHub + HAPI FHIR
services:
  # Service FHIRHub - Application de conversion HL7v2 vers FHIR
  fhirhub:
    build:
      context: .
      dockerfile: Dockerfile
    # Pas d'image externe, on construit toujours localement
    container_name: fhirhub
    restart: unless-stopped
    ports:
      - "5000:5000"  # Exposition du port du serveur web FHIRHub
    volumes:
      # Volumes pour la persistance des données même après redémarrage/reconstruction des conteneurs
      - ./data/fhirhub/storage:/app/storage       # Base de données SQLite et caches
      - ./data/fhirhub/french_terminology:/app/french_terminology  # Terminologies médicales françaises
      - ./data/fhirhub/logs:/app/logs             # Logs d'application
      - ./data/fhirhub/temp:/app/temp             # Fichiers temporaires
    environment:
      # Configuration de base
      - NODE_ENV=production
      - PORT=5000
      - HAPI_FHIR_URL=http://hapi-fhir:8080/fhir  # URL du serveur HAPI FHIR (résolution DNS interne par Docker)
      
      # Optimisations de performance Node.js
      - NODE_OPTIONS=--max-old-space-size=512 --max-http-header-size=16384 --no-warnings
      
      # Gestion du cache interne
      - CACHE_MAX_SIZE=1000                # Nombre maximal d'entrées dans le cache
      - CACHE_TTL=3600                     # Durée de vie des entrées du cache en secondes
      - CACHE_CHECK_PERIOD=600             # Période de vérification du cache en secondes
      
      # Configuration pour la communication avec HAPI FHIR
      - FHIR_REQUEST_TIMEOUT=30000         # Timeout pour les requêtes FHIR en ms
      - FHIR_MAX_RETRY_ATTEMPTS=3          # Nombre maximum de tentatives pour les requêtes FHIR
      - FHIR_RETRY_DELAY=1000              # Délai entre les tentatives en ms
    depends_on:
      - hapi-fhir  # S'assure que le service HAPI FHIR démarre avant FHIRHub
    deploy:
      resources:
        limits:
          memory: 768M  # Limite de mémoire pour le conteneur
        reservations:
          memory: 512M  # Réservation de mémoire minimale
    networks:
      - fhir-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/system/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Service HAPI FHIR - Serveur FHIR R4
  hapi-fhir:
    image: hapiproject/hapi:latest  # Utilisation de l'image officielle HAPI FHIR
    container_name: hapi-fhir
    restart: unless-stopped
    ports:
      - "8080:8080"  # Exposition du port du serveur HAPI FHIR
    volumes:
      # Volume pour la persistance des données H2 (base de données par défaut de HAPI FHIR)
      - ./data/hapi-fhir:/data/hapi
      # Configuration explicitée
      - ./data/hapi-fhir/config:/data/hapi/config
    environment:
      # Configuration explicite du fichier properties à utiliser
      - SPRING_CONFIG_LOCATION=file:///data/hapi/config/application.properties
      
      # Configuration de base
      - SERVER_PORT=8080
      - SERVER_SERVLET_CONTEXT_PATH=/
      - SPRING_MAIN_WEB_APPLICATION_TYPE=servlet
      
      # Configuration FHIR
      - hapi.fhir.default_encoding=json           # Format par défaut des réponses
      - hapi.fhir.fhir_version=R4                 # Version FHIR utilisée (R4 = 4.0.1)
      - hapi.fhir.allow_external_references=true  # Autorise les références externes
      - hapi.fhir.allow_multiple_delete=true      # Autorise les suppressions multiples
      - hapi.fhir.server_address=http://localhost:8080/fhir  # URL serveur pour les liens de pagination
      
      # Désactiver des fonctionnalités pour améliorer la performance et éviter les erreurs
      - hapi.fhir.validation.enabled=false        # Désactiver la validation stricte pour améliorer la performance
      - hapi.fhir.expunge_enabled=true            # Activer les opérations d'expunge
      - hapi.fhir.advanced_lucene_indexing=false  # Désactiver l'indexation Lucene pour simplifier
      - hapi.fhir.subscription.resthook_enabled=false  # Désactiver les webhooks pour simplifier
      - hapi.fhir.subscription.websocket_enabled=false # Désactiver les websockets pour simplifier
      - hapi.fhir.subscription.email_enabled=false     # Désactiver les emails pour simplifier
      - hapi.fhir.narratives_enabled=false        # Désactiver les narratives pour simplifier
      - hapi.fhir.binary_storage_enabled=false    # Désactiver le stockage binaire pour simplifier
      - hapi.fhir.bulk_export_enabled=false       # Désactiver l'export en masse pour simplifier
      
      # Configuration de la base de données
      - spring.datasource.url=jdbc:h2:file:/data/hapi/database/h2;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE  # Chemin de la base de données H2 avec options
      - spring.datasource.username=sa
      - spring.datasource.password=sa
      - spring.datasource.driverClassName=org.h2.Driver
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
      - spring.jpa.hibernate.ddl-auto=update  # Créer automatiquement les tables si nécessaire
      - spring.jpa.properties.hibernate.format_sql=false # Désactiver l'affichage des requêtes SQL
      - spring.jpa.properties.hibernate.show_sql=false   # Désactiver l'affichage des requêtes SQL
      
      # Configuration de journalisation
      - logging.level.root=WARN
      - logging.level.ca.uhn.fhir=WARN
      - logging.level.org.springframework=WARN
      - logging.level.org.hibernate=WARN
      
      # Configuration Spring
      - spring.main.allow-bean-definition-overriding=true
      - spring.main.allow-circular-references=true
      - spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      
      # Configuration de la JVM et des performances
      - JAVA_OPTS=-Xmx512m -Xms256m -XX:+UseG1GC -XX:+UseStringDeduplication -XX:MaxRAMPercentage=75.0
    deploy:
      resources:
        limits:
          memory: 768M  # Limite de mémoire pour le conteneur
        reservations:
          memory: 512M  # Réservation de mémoire minimale
    networks:
      - fhir-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/fhir/metadata"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # Le serveur HAPI FHIR peut prendre du temps à démarrer

# Réseau partagé entre les services
networks:
  fhir-network:
    driver: bridge

# Volumes persistants pour stocker les données en dehors des conteneurs
volumes:
  fhirhub-storage:
    driver: local
  hapi-fhir-data:
    driver: local